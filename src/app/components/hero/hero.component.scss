@use '../../../styles.scss' as *;

.my-name {
    @include font-karla($fs: 128px, $fw: 700);
    color: $color-not-white;
    margin-top: 12px;
}

.content-bg {
    background: linear-gradient(180deg, rgba(28, 28, 28, 0) 0%, $color-black-bg 100%),
        linear-gradient(45deg, $color-black-bg 30%, $color-green-bg 70%);
}

.hero-content {
    position: relative;
    @include dFlex();
    height: 100dvh;
    width: 100%;
    max-width: $content-limit;
    margin: 0 auto;
    padding: 100px 96px 0 96px;

    .center {
        @include dFlex($fd: column);
        margin-bottom: 100px;

        h3 {
            @include font-fira-code($fs: 40px, $fw: 400);
            color: $color-not-white;
        }

        h1 {
            @include font-karla($fs: 128px, $fw: 700);
            color: $color-not-white;
            margin-top: 12px;
        }

        .btns {
            @include dFlex($g: 48px);
            margin-top: 40px;
        }
    }
}

.left-line {
    position: absolute;
    bottom: 0;
    left: 96px;
    @include dFlex($fd: column, $g: 10px);

    .line {
        width: 1px;
        height: 240px;
        border: unset;
        background-color: $color-v2-green-100;
    }

    .arrow {
        @include dFlex();
        width: 30px;
        height: 48px;
        border: 1px solid $color-v2-green-100;
        border-radius: 100vw;

        svg {
            animation: 1.2s move-arrow infinite ease-in-out;
        }
    }
}

@keyframes move-arrow {
    0% {
        transform: translateY(-3px);
    }

    50% {
        transform: translateY(3px);
    }

    100% {
        transform: translateY(-3px);
    }
}

.right-line {
    position: absolute;
    bottom: 0;
    right: 96px;
    @include dFlex($fd: column, $g: 10px);

    a {
        @include font-karla($fs: 18px, $fw: 400);
        color: white;
        writing-mode: vertical-rl;
        transform: rotate(180deg);
        text-decoration: none;
        cursor: pointer;
        @extend .hover-transition;

        &:hover {
            color: $color-v2-green-100;
            @extend .hover-transition;
        }
    }

    svg:hover path {
        fill: white;
        @extend .hover-transition;
    }

    svg path {
        @extend .hover-transition;
    }


    .line {
        width: 1px;
        height: 186px;
        border: unset;
        background-color: white;
    }

    .svg-wrapper {
        position: relative;
        cursor: pointer;

        &:hover .dot {
            opacity: 1;
        }
    }

    .dot {
        @extend .green-dot;
        position: absolute;
        top: 50%;
        right: 0;
        transform: translate(10px, -50%);
        opacity: 0;
        transition: opacity 125ms ease-out;
    }
}

.marquee {
    transform: rotate(-2deg);
    overflow: hidden;
    position: absolute;
    left: 0;
    bottom: 62px;
    width: 100%;
    height: 62px;
    background-color: $color-blur-bg;
    backdrop-filter: blur(5.300000190734863px);
    display: flex;
    gap: 48px;

    .scroll-one {
        animation: loop 30s linear infinite;
        @include dFlex($jc: space-around, $g: 48px);
        overflow: hidden;
        flex-shrink: 0;
    }

    .scroll-two {
        animation: loop 30s linear infinite;
        @include dFlex($jc: space-around, $g: 48px);
        overflow: hidden;
        flex-shrink: 0;
    }

    span {
        @include font-karla($fs: 32px, $fw: 400);
        color: $color-v2-green-100;
        letter-spacing: 2px;
        white-space: nowrap;
    }
}

@keyframes loop {
    0% {
        transform: translateX(0%);
    }

    100% {
        transform: translateX(calc(-100% - 48px));
    }
}